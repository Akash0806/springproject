<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/data/jpa
http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

  <!-- <import resource="classpath:resources/springmvcdemoproject_spring-security.xml"/> -->
	<context:property-placeholder  location="classpath:resources/database.properties" />
	<!-- <mvc:resources mapping="/resources/**" location="/resources/"/> -->
	<mvc:annotation-driven />
	
	
	<!-- <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"></bean>
	
	 <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <constructor-arg ref="objectMapper"></constructor-arg>
        <property name="prefixJson" value="false"/>
        <property name="supportedMediaTypes" value="application/json"/>
    </bean> -->
	
	<context:annotation-config />
	 <bean id="dozerBeanMapper" class="org.dozer.DozerBeanMapper"> 
		<property name="mappingFiles" value="classpath:resources/dozer-bean-mappings.xml"/> 
	</bean> 
	<context:component-scan base-package="com.springmvc.controller" />
	<context:component-scan base-package="com.springmvc.restController" />
	<context:component-scan base-package="com.springmvc.daoimpl" />
	<context:component-scan base-package="com.springmvc.servicesimpl" />
    <context:component-scan base-package="com.springmvc.pojo" />
    <jpa:repositories base-package="com.springmvc.jparepository"/>
      <!--  <import resource="classpath:resources/persistence.xml" /> -->
     
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="Url"
			value="jdbc:mysql://localhost:3306/springhibernatedatabase"></property>
		<property name="Username" value="root"></property>
		<property name="Password" value="root"></property>
	</bean>

	<bean id="entityManagerFactoryBean"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="localContainerEntity" />
		<!--  <property name="packagesToScan">
			<array>
				<value>com.springmvc.pojo</value>
			</array>
		</property> --> 
		
		<property name="dataSource" ref="dataSource"></property>
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter"></property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				
			</props>
		</property>
	</bean>
	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
	<!-- This transaction manager is appropriate for applications that use a 
		single JPA EntityManagerFactory for transactional data access. JTA (usually 
		through JtaTransactionManager) is necessary for accessing multiple transactional 
		resources within the same transaction. -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactoryBean" />
	</bean>

	<!-- responsible for registering the necessary Spring components that power 
		annotation-driven transaction management; such as when @Transactional methods 
		are invoked -->
	<tx:annotation-driven />
  

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		id="jspViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

</beans>